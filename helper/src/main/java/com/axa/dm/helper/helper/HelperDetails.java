package com.axa.dm.helper.helper;

import java.text.SimpleDateFormat;
import java.text.ParseException;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class HelperDetails implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	private String dateFormatStr = "yyyyMMdd";
	@org.kie.api.definition.type.Label("Helper Position")
	private java.lang.String helperPosition;
	@org.kie.api.definition.type.Label("Helper Involve Driving Duty")
	private java.lang.String drivingDuty;
	@org.kie.api.definition.type.Label("Helper Date of Birth")
	private java.lang.String helperDob;
	@org.kie.api.definition.type.Label("Helper Additional Supplementary Medical Benefit Flag")
	private java.lang.String helperAdditionalBenefit;

	@org.kie.api.definition.type.Label("Age")
	private Integer age;

	@org.kie.api.definition.type.Label(value = "Optional Cover")
	private java.math.BigDecimal optionalCover;

	public HelperDetails() {
	}

	public java.lang.String getHelperPosition() {
		return this.helperPosition;
	}

	public void setHelperPosition(java.lang.String helperPosition) {
		this.helperPosition = helperPosition;
	}

	public java.lang.String getDrivingDuty() {
		return this.drivingDuty;
	}

	public void setDrivingDuty(java.lang.String drivingDuty) {
		this.drivingDuty = drivingDuty;
	}

	public java.lang.String getHelperDob() {
		return this.helperDob;
	}

	public java.util.Date getHelperDobCal() {
		try {
			if (this.helperDob != null && !this.helperDob.isEmpty()) {
				java.util.Date newDate = new SimpleDateFormat(dateFormatStr)
						.parse(this.helperDob);
				return newDate;
			}

			return null;
		} catch (ParseException e) {
			// e.printStackTrace();
			return null;
		}
	}

	public void setHelperDob(java.lang.String helperDob) {
		this.helperDob = helperDob;
	}

	public java.lang.String getHelperAdditionalBenefit() {
		return this.helperAdditionalBenefit;
	}

	public void setHelperAdditionalBenefit(
			java.lang.String helperAdditionalBenefit) {
		this.helperAdditionalBenefit = helperAdditionalBenefit;
	}

	public java.lang.Integer getAge() {
		Integer i = null;
		if (this.getHelperDobCal() != null) {
			long startTime = this.getHelperDobCal().getTime();
			long endTime = new java.util.Date().getTime();
			long diffTime = endTime - startTime;
			long diffDays = diffTime / (1000 * 60 * 60 * 24);
			i = (int) diffDays + 1;
		}
		return i;
	}

	public void setAge(java.lang.Integer age) {
		this.age = age;
	}

	public HelperDetails(java.lang.String helperPosition,
			java.lang.String drivingDuty, java.lang.String helperDob,
			java.lang.String helperAdditionalBenefit, java.lang.Integer age) {
		this.helperPosition = helperPosition;
		this.drivingDuty = drivingDuty;
		this.helperDob = helperDob;
		this.helperAdditionalBenefit = helperAdditionalBenefit;
		this.age = age;
	}

	public java.math.BigDecimal getOptionalCover() {
		return this.optionalCover;
	}

	public void setOptionalCover(java.math.BigDecimal optionalCover) {
		this.optionalCover = optionalCover;
	}

	public HelperDetails(java.lang.String dateFormatStr,
			java.lang.String helperPosition, java.lang.String drivingDuty,
			java.lang.String helperDob,
			java.lang.String helperAdditionalBenefit, java.lang.Integer age,
			java.math.BigDecimal optionalCover) {
		this.dateFormatStr = dateFormatStr;
		this.helperPosition = helperPosition;
		this.drivingDuty = drivingDuty;
		this.helperDob = helperDob;
		this.helperAdditionalBenefit = helperAdditionalBenefit;
		this.age = age;
		this.optionalCover = optionalCover;
	}

}